/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MyNFT, MyNFTInterface } from "../../contracts/MyNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "mintNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b503360405180604001604052806005815260200164135e53919560da1b815250604051806040016040528060048152602001631353919560e21b815250816000908161005c919061019f565b506001610069828261019f565b5050506001600160a01b03811661009a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100a3816100ae565b50600060075561025d565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061012a57607f821691505b60208210810361014a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561019a57806000526020600020601f840160051c810160208510156101775750805b601f840160051c820191505b818110156101975760008155600101610183565b50505b505050565b81516001600160401b038111156101b8576101b8610100565b6101cc816101c68454610116565b84610150565b6020601f82116001811461020057600083156101e85750848201515b600019600385901b1c1916600184901b178455610197565b600084815260208120601f198516915b828110156102305787850151825560209485019460019092019101610210565b508482101561024e5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6111828061026c6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a22cb46511610071578063a22cb4651461022e578063b88d4fde14610241578063c87b56dd14610254578063e985e9c514610267578063f2fde38b1461027a57600080fd5b8063715018a61461020557806373448c461461020d5780638da5cb5b1461021557806395d89b411461022657600080fd5b806323b872dd116100e957806323b872dd1461019857806342842e0e146101ab57806354ba0f27146101be5780636352211e146101df57806370a08231146101f257600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e610129366004610dcd565b61028d565b60405190151581526020015b60405180910390f35b61014b6102df565b60405161013a9190610e3a565b61016b610166366004610e4d565b610371565b6040516001600160a01b03909116815260200161013a565b610196610191366004610e7d565b61039a565b005b6101966101a6366004610ea7565b6103a9565b6101966101b9366004610ea7565b610439565b6101d16101cc366004610ee4565b610459565b60405190815260200161013a565b61016b6101ed366004610e4d565b6104e3565b6101d1610200366004610ee4565b6104ee565b610196610536565b6007546101d1565b6006546001600160a01b031661016b565b61014b61054a565b61019661023c366004610eff565b610559565b61019661024f366004610f51565b610564565b61014b610262366004610e4d565b61057c565b61012e610275366004611035565b6105f1565b610196610288366004610ee4565b61061f565b60006001600160e01b031982166380ac58cd60e01b14806102be57506001600160e01b03198216635b5e139f60e01b145b806102d957506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102ee90611068565b80601f016020809104026020016040519081016040528092919081815260200182805461031a90611068565b80156103675780601f1061033c57610100808354040283529160200191610367565b820191906000526020600020905b81548152906001019060200180831161034a57829003601f168201915b5050505050905090565b600061037c8261065d565b506000828152600460205260409020546001600160a01b03166102d9565b6103a5828233610696565b5050565b6001600160a01b0382166103d857604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006103e58383336106a3565b9050836001600160a01b0316816001600160a01b031614610433576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103cf565b50505050565b61045483838360405180602001604052806000815250610564565b505050565b600061046361079c565b6001600160a01b0382166104b95760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f2061646472657373000000000060448201526064016103cf565b600060075460016104ca91906110a2565b600781905590506104db83826107c9565b90505b919050565b60006102d98261065d565b60006001600160a01b03821661051a576040516322718ad960e21b8152600060048201526024016103cf565b506001600160a01b031660009081526003602052604090205490565b61053e61079c565b61054860006107e3565b565b6060600180546102ee90611068565b6103a5338383610835565b61056f8484846103a9565b61043333858585856108d4565b60606105878261065d565b50600061059f60408051602081019091526000815290565b905060008151116105bf57604051806020016040528060008152506105ea565b806105c9846109ff565b6040516020016105da9291906110c3565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61062761079c565b6001600160a01b03811661065157604051631e4fbdf760e01b8152600060048201526024016103cf565b61065a816107e3565b50565b6000818152600260205260408120546001600160a01b0316806104db57604051637e27328960e01b8152600481018490526024016103cf565b6104548383836001610a92565b6000828152600260205260408120546001600160a01b03908116908316156106d0576106d0818486610b98565b6001600160a01b0381161561070e576106ed600085600080610a92565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b0385161561073d576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6006546001600160a01b031633146105485760405163118cdaa760e01b81523360048201526024016103cf565b6103a5828260405180602001604052806000815250610bfc565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661086757604051630b61174360e31b81526001600160a01b03831660048201526024016103cf565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156109f857604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906109169088908890879087906004016110f2565b6020604051808303816000875af1925050508015610951575060408051601f3d908101601f1916820190925261094e9181019061112f565b60015b6109ba573d80801561097f576040519150601f19603f3d011682016040523d82523d6000602084013e610984565b606091505b5080516000036109b257604051633250574960e11b81526001600160a01b03851660048201526024016103cf565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146109f657604051633250574960e11b81526001600160a01b03851660048201526024016103cf565b505b5050505050565b60606000610a0c83610c14565b600101905060008167ffffffffffffffff811115610a2c57610a2c610f3b565b6040519080825280601f01601f191660200182016040528015610a56576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610a6057509392505050565b8080610aa657506001600160a01b03821615155b15610b68576000610ab68461065d565b90506001600160a01b03831615801590610ae25750826001600160a01b0316816001600160a01b031614155b8015610af55750610af381846105f1565b155b15610b1e5760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016103cf565b8115610b665783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610ba3838383610cec565b610454576001600160a01b038316610bd157604051637e27328960e01b8152600481018290526024016103cf565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103cf565b610c068383610d52565b6104543360008585856108d4565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610c535772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c7f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c9d57662386f26fc10000830492506010015b6305f5e1008310610cb5576305f5e100830492506008015b6127108310610cc957612710830492506004015b60648310610cdb576064830492506002015b600a83106104db5760010192915050565b60006001600160a01b03831615801590610d4a5750826001600160a01b0316846001600160a01b03161480610d265750610d2684846105f1565b80610d4a57506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160a01b038216610d7c57604051633250574960e11b8152600060048201526024016103cf565b6000610d8a838360006106a3565b90506001600160a01b03811615610454576040516339e3563760e11b8152600060048201526024016103cf565b6001600160e01b03198116811461065a57600080fd5b600060208284031215610ddf57600080fd5b81356105ea81610db7565b60005b83811015610e05578181015183820152602001610ded565b50506000910152565b60008151808452610e26816020860160208601610dea565b601f01601f19169290920160200192915050565b6020815260006105ea6020830184610e0e565b600060208284031215610e5f57600080fd5b5035919050565b80356001600160a01b03811681146104de57600080fd5b60008060408385031215610e9057600080fd5b610e9983610e66565b946020939093013593505050565b600080600060608486031215610ebc57600080fd5b610ec584610e66565b9250610ed360208501610e66565b929592945050506040919091013590565b600060208284031215610ef657600080fd5b6105ea82610e66565b60008060408385031215610f1257600080fd5b610f1b83610e66565b915060208301358015158114610f3057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f6757600080fd5b610f7085610e66565b9350610f7e60208601610e66565b925060408501359150606085013567ffffffffffffffff811115610fa157600080fd5b8501601f81018713610fb257600080fd5b803567ffffffffffffffff811115610fcc57610fcc610f3b565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610ffb57610ffb610f3b565b60405281815282820160200189101561101357600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b6000806040838503121561104857600080fd5b61105183610e66565b915061105f60208401610e66565b90509250929050565b600181811c9082168061107c57607f821691505b60208210810361109c57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102d957634e487b7160e01b600052601160045260246000fd5b600083516110d5818460208801610dea565b8351908301906110e9818360208801610dea565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061112590830184610e0e565b9695505050505050565b60006020828403121561114157600080fd5b81516105ea81610db756fea2646970667358221220988ddf5c99d9599e6920d885ba5328311ab9a047953edcdfbcabab3b775a125064736f6c634300081b0033";

type MyNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyNFT__factory extends ContractFactory {
  constructor(...args: MyNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MyNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyNFT__factory {
    return super.connect(runner) as MyNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyNFTInterface {
    return new Interface(_abi) as MyNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyNFT {
    return new Contract(address, _abi, runner) as unknown as MyNFT;
  }
}
